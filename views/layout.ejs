<!DOCTYPE html>
<html>
  <head>
    <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-grid.css">
    <link rel="stylesheet" href="/styles/bootstrap-grid.min.css">
    <link rel="stylesheet" href="/styles/bootstrap-reboot.css">
    <link rel="stylesheet" href="/styles/bootstrap-reboot.min.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/icons/font-awesome/css/font-awesome.css">
    <link rel="stylesheet" href="/styles/icons/font-awesome/css/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/icons/font-awesome/css/mixins.css">
    <link rel="stylesheet" href="/styles/icons/font-awesome/css/variables.css">
    <link rel="stylesheet" href="/styles/icons/material-design-iconic-font/css/material-design-iconic-font.css">
    <link rel="stylesheet" href="/styles/icons/material-design-iconic-font/css/material-design-iconic-font.min.css">
    <link rel="stylesheet" href="/styles/icons/themify-icons/ie7/ie7.css">
    <link rel="stylesheet" href="/styles/icons/themify-icons/themify-icons.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
    <script src="node_modules/core-js/client/shim.min.js"></script>
    <script src="node_modules/zone.js/dist/zone.js"></script>
    <script src="node_modules/reflect-metadata/Reflect.js"></script>
    <script src="node_modules/systemjs/dist/system.src.js"></script>

    <script>

      (function(global){
        var map = {
          'app': 'app', //dist
          '@angular': 'node_modules/@angular',
          'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',
          'rxjs': 'node_modules/rxjs',
          '@ng-bootstrap/ng-bootstrap':'node_modules/@ng-bootstrap/ng-bootstrap/bundles/ng-bootstrap.js',
        };

        var packages = {
          'app': { main: 'main.js', defaultExtension: 'js' },
          'rxjs': { defaultExtension: 'js' },
          'angular2-in-memory-web-api': { main: 'index.js', defaultExtension: 'js' },
        };

        var ngPackageNames = [
        'common',
        'compiler',
        'core',
        'forms',
        'http',
        'platform-browser',
        'platform-browser-dynamic',
        'router',
        'upgrade',
        ];
        // individual files (~300 request)
        function packIndex(pkgName){
          packages['@angular/'+pkgName] = { main: 'index.js', defaultExtension: 'js' };
        }

        function packUmd(pkgName){
          packages['@angular/'+pkgName] = { main: '/bundles/' + pkgName + '.umd.js', defaultExtension: 'js'};
        }

        var setPackageConfig = System.packageWithIndex ? packIndex : packUmd;

        ngPackageNames.forEach(setPackageConfig);

        var config = {
          map: map,
          packages: packages
        };

        System.config(config);
        System.import('app').catch(function(err){ console.error(err); });

      })(this);
    </script>
  </head>

  <body class="fixed-left">
    <my-app>Loading...</my-app>
  </body>
</html>
